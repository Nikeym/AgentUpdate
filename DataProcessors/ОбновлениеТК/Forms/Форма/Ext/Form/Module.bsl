&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
	ПодключитьОбработчикОжидания("ОповещениеРегистровОбИзмененииПриОткрытии", 30, Ложь);
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Базы.Ссылка КАК Ссылка,
	               |	Базы.ТестовыйКонтур КАК ТестовыйКонтур,
	               |	ДатыРелизовСрезПервых.Период
	               |ИЗ
	               |	Справочник.Базы КАК Базы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыРелизов.СрезПервых(&Период, ) КАК ДатыРелизовСрезПервых
	               |		ПО Базы.ТестовыйКонтур = ДатыРелизовСрезПервых.ТестовыйКонтур
	               |ГДЕ
	               |	Базы.ТестовыйКонтур В (ЗНАЧЕНИЕ(Перечисление.ТестовыеКонтуры.ТестовыйКонтур1), ЗНАЧЕНИЕ(Перечисление.ТестовыеКонтуры.ТестовыйКонтур2))
	               |	И НЕ Базы.Административная
	               |	И НЕ Базы.CF
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТестовыйКонтур УБЫВ,
	               |	Ссылка УБЫВ";
	Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата()));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Стр = Базы.Добавить();
		Стр.База = Выборка.Ссылка;
		Стр.ТестовыйКонтур = Выборка.ТестовыйКонтур;
		Стр.ДатаРелиза = Выборка.Период;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыбранные(Команда)
	
	Оповещение = "";
	ОбновитьВыбранныеНаСервере(Оповещение);
	ПодключитьОбработчикОжидания("ОповещениеРегистровОбИзменении", 2, Истина);
	Если НЕ ПустаяСтрока(Оповещение) Тогда
		ПоказатьПредупреждение(, Лев(Оповещение, СтрДлина(Оповещение)-1),,"Внимание!");	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВыбранныеНаСервере(Оповещение)
	
	Для Каждого СтрБаза Из Базы Цикл 
		Если СтрБаза.Выбор Тогда
			РезультатПроверки = "";
			Если НЕ РегистрыСведений.БлокировкиБаз.БазаЗахвачена(СтрБаза.База, РезультатПроверки) Тогда
				ОбновлениеИнфо = "";
				Если НЕ ОбновлениеВФоне.ОбновлениеЗапущено(СтрБаза.База, ОбновлениеИнфо) Тогда
					ПрМассив = Новый Массив;
					ПрМассив.Добавить(СтрБаза.База);
					ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОбновлениеВФоне.Обновление", ПрМассив, Строка(СтрБаза.База));	
				Иначе
					Запрос = Новый Запрос("ВЫБРАТЬ Результат ИЗ РегистрСведений.Логи.СрезПоследних(, База = &База)");
					Запрос.УстановитьПараметр("База", СтрБаза.База);
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() И Выборка.Результат = Перечисления.РезультатыОбновлений.Обновляется Тогда
						Менеджер = РегистрыСведений.Логи.СоздатьМенеджерЗаписи();
						Менеджер.Период = ТекущаяДата();
						Менеджер.База =	СтрБаза.База;
						Менеджер.Результат = Перечисления.РезультатыОбновлений.ВОчереди;
						Менеджер.Пользователь = ПараметрыСеанса.ТекущийПользователь;
						Менеджер.Записать();
					Иначе 
						Оповещение = Оповещение + ОбновлениеИнфо + Символы.ПС;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Оповещение = Оповещение + РезультатПроверки + ". Обновление невозможно!" + Символы.ПС;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Обнова(Команда)
	ОповещениеРегистровОбИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеРегистровОбИзменении()
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Логи"));
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.БлокировкиБаз"));
	Элементы.Логи.ТекущаяСтрока = ПолучитьПоследнююзаписьНаСервере(); 
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеРегистровОбИзмененииПриОткрытии()
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Логи"));
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.БлокировкиБаз"));
КонецПроцедуры

&НаКлиенте
Процедура БазыБазаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура БазыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура БазыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗахватитьКонфигуратор(Команда)
	
	Оповещение = "";
	МассивАдмина = ЗахватитьКонфигураторНаСервере(Оповещение);
	ЧислоБаз = МассивАдмина.Количество();
	Если ЧислоБаз Тогда
		СтрокаИзМассива = РазложитьМассивВСтроку(МассивАдмина);
		Если ЧислоБаз = 1 Тогда 
			Вопрос = "База " + СтрокаИзМассива + " занята другим пользователем. Снять блокировку и установить собственную?";
		Иначе
			Вопрос = "Базы " + СтрокаИзМассива + " заняты другим пользователем. Снять блокировки и установить собственные?";;
		КонецЕсли;
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаВопросаУстановитьБлок", ЭтотОбъект, МассивАдмина), Вопрос, РежимДиалогаВопрос.ДаНет)
	Иначе
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.БлокировкиБаз"));
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Оповещение) Тогда
		ПоказатьПредупреждение(, Лев(Оповещение, СтрДлина(Оповещение)-1),,"Внимание!");	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗахватитьКонфигураторНаСервере(Оповещение)
	
	МассивАдмина = Новый Массив;
	
	Для Каждого База Из Базы Цикл 
		
		Если База.Выбор Тогда
			РезультатПроверки = "";
			Если НЕ РегистрыСведений.БлокировкиБаз.БазаЗахвачена(База.База, РезультатПроверки) Тогда 
				РегистрыСведений.БлокировкиБаз.ЗаписатьДействие(База.База, ПараметрыСеанса.ТекущийПользователь);
				Запрос = Новый Запрос("ВЫБРАТЬ Пользователь ИЗ РегистрСведений.Логи.СрезПоследних(, База = &База И Результат = ЗНАЧЕНИЕ(Перечисление.РезультатыОбновлений.ОжидаетсяОтключениеПользователей))");
				Запрос.УстановитьПараметр("База", База.База);
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда 
					Оповещение = Оповещение + "Запланировано не динамическое обновление базы " + База.База + ". При старте обновления сеанс конфигуратора будет завершен!" + Символы.ПС;	
				КонецЕсли;
			ИначеЕсли Найти(РезультатПроверки, Строка(ПараметрыСеанса.ТекущийПользователь)) Тогда
				Оповещение = Оповещение + "База " + База.База + " уже захвачена вами." + Символы.ПС;
			ИначеЕсли ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("Администратор")) Тогда 
				 МассивАдмина.Добавить(База.База);
			Иначе
				Оповещение = Оповещение + РезультатПроверки + ". Захват невозможен!" + Символы.ПС;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат МассивАдмина;
	
КонецФункции

&НаКлиенте
Процедура ОтпуститьКонфигуратор(Команда)
	
	Оповещение = "";
	МассивАдмина = ОтпуститьКонфигураторНаСервере(Оповещение);
	ЧислоБаз = МассивАдмина.Количество();
	Если ЧислоБаз Тогда
		СтрокаИзМассива = РазложитьМассивВСтроку(МассивАдмина);
		Если ЧислоБаз = 1 Тогда 
			Вопрос = "База " + СтрокаИзМассива + " занята другим пользователем. Снять блокировку?";
		Иначе
			Вопрос = "Базы " + СтрокаИзМассива + " заняты другим пользователем. Снять блокировку?";;
		КонецЕсли;
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаВопроса", ЭтотОбъект, МассивАдмина), Вопрос, РежимДиалогаВопрос.ДаНет)
	Иначе 
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.БлокировкиБаз"));	
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Оповещение) Тогда
		ПоказатьПредупреждение(, Лев(Оповещение, СтрДлина(Оповещение)-1),,"Внимание!");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция РазложитьМассивВСтроку(Массив)
	Строка = "";
	Для Каждого Элем Из Массив Цикл 
		Строка = Строка + """" + СокрЛП(Строка(Элем)) + """, ";	
	КонецЦикла;
	Возврат Лев(Строка, СтрДлина(Строка) - 2); 
КонецФункции

&НаСервере
Функция ОтпуститьКонфигураторНаСервере(Оповещение)
	
	Массив = Новый Массив;
	
	Для Каждого База Из Базы Цикл 
		Если База.Выбор Тогда
			РезультатПроверки = "";
			Если НЕ РегистрыСведений.БлокировкиБаз.БазаЗахвачена(База.База, РезультатПроверки) Тогда 
				Оповещение = Оповещение + РезультатПроверки + Символы.ПС;
			ИначеЕсли Найти(РезультатПроверки, Строка(ПараметрыСеанса.ТекущийПользователь)) Тогда 
				РегистрыСведений.БлокировкиБаз.СнятьБлокировку(База.База);
			ИначеЕсли ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("Администратор")) Тогда 
				Массив.Добавить(База.База); 
			Иначе 
				Оповещение = Оповещение + РезультатПроверки + Символы.ПС;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВопроса(РезультатВопроса, МассивБаз) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		СнятьБлокировкуАдмин(МассивБаз);
	КонецЕсли;
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.БлокировкиБаз"));
КонецПроцедуры

&НаСервере
Процедура СнятьБлокировкуАдмин(МассивБаз)
	
	Для Каждого База Из МассивБаз Цикл 
		РегистрыСведений.БлокировкиБаз.СнятьБлокировку(База);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВопросаУстановитьБлок(РезультатВопроса, МассивБаз) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		УстановитьБлокировкуАдмин(МассивБаз);
	КонецЕсли;
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.БлокировкиБаз"));
КонецПроцедуры

&НаСервере
Процедура УстановитьБлокировкуАдмин(МассивБаз)
	
	Для Каждого База Из МассивБаз Цикл 
		РегистрыСведений.БлокировкиБаз.ЗаписатьДействие(База, ПараметрыСеанса.ТекущийПользователь);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаCFНажатие(Элемент)
	ОткрытьФорму("Обработка.ВыгрузкаCF.Форма.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПринудительно(Команда)
	
	Оповещение = "";	
	ОбновитьПринудительноНаСервере(Оповещение);
	ПодключитьОбработчикОжидания("ОповещениеРегистровОбИзменении", 2, Истина);
	
	Если НЕ ПустаяСтрока(Оповещение) Тогда
		ПоказатьПредупреждение(, Лев(Оповещение, СтрДлина(Оповещение)-1),,"Внимание!");	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПринудительноНаСервере(Оповещение)
	
	Для Каждого СтрБаза Из Базы Цикл 
		Если СтрБаза.Выбор Тогда
			РезультатПроверки = "";
			Если НЕ РегистрыСведений.БлокировкиБаз.БазаЗахвачена(СтрБаза.База, РезультатПроверки) Тогда
				ОбновлениеИнфо = "";
				Если НЕ ОбновлениеВФоне.ОбновлениеЗапущено(СтрБаза.База, ОбновлениеИнфо) ИЛИ Найти(ОбновлениеИнфо, "запланировано не динамическое обновление") ИЛИ Найти(ОбновлениеИнфо, "отложено администратором") Тогда
					ПрМассив = Новый Массив;
					ПрМассив.Добавить(СтрБаза.База);
					ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОбновлениеВФоне.СтартПринудительногоОбновления", ПрМассив, Строка(СтрБаза.База));	
				Иначе 	
					Оповещение = Оповещение + ОбновлениеИнфо + Символы.ПС;	
				КонецЕсли;	
			Иначе
				Оповещение = Оповещение + РезультатПроверки + ". Обновление невозможно!";
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтложитьОбновление(Команда)
	ОтложитьОбновлениеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтложитьОбновлениеНаСервере()
	
	МассивБаз = Новый Массив;
	
	Для Каждого СтрБаза Из Базы Цикл 
		
		Если СтрБаза.Выбор Тогда
			
			МассивБаз.Добавить(СтрБаза.База);	
			
		КонецЕсли;
		
	КонецЦикла;
	
	РегистрыСведений.Логи.ОтложитьОбновление(МассивБаз);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПоследнююзаписьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЛогиСрезПоследних.Период КАК Период,
		|	ЛогиСрезПоследних.База
		|ИЗ
		|	РегистрСведений.Логи.СрезПоследних КАК ЛогиСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ,
		|	ЛогиСрезПоследних.ДатаОкончания";
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Если Выборка.Следующий() Тогда 
		Возврат РегистрыСведений.Логи.СоздатьКлючЗаписи(Новый Структура ("Период, База", Выборка.Период, Выборка.База));
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Процедура БазыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Колонка = Элемент.ТекущийЭлемент.Имя;
	Если Колонка = "БазыБаза" Тогда 
		Форма = ПолучитьФорму("Справочник.Базы.Форма.ФормаЭлемента", Новый Структура("Ключ", Элемент.ТекущиеДанные.База));
		Форма.Открыть();
	ИначеЕсли Колонка = "БазыТестовыйКонтур" ИЛИ Колонка = "БазыДатаРелиза" Тогда
		Строки = ЭтотОбъект.Базы.НайтиСтроки(Новый Структура("ТестовыйКонтур", Элемент.ТекущиеДанные.ТестовыйКонтур));
		Выбор = Элемент.ТекущиеДанные.Выбор;
		Для Каждого Строка Из Строки Цикл 
			Строка.Выбор = НЕ Выбор;	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущегоПользователя()
	 Возврат ПараметрыСеанса.ТекущийПользователь;
КонецФункции

&НаКлиенте
Процедура БлокировкиБазВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	#Если НЕ ВебКлиент Тогда
		Если Элемент.ТекущийЭлемент.Имя = "БлокировкиБазБаза" И Элемент.ТекущиеДанные.Пользователь = ПолучитьТекущегоПользователя() Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьВопрос(Новый ОписаниеОповещения("ЗапуститьКонфигураторБазы", ЭтотОбъект, Элемент.ТекущиеДанные.База), "Запустить конфигуратор базы " + Элемент.ТекущиеДанные.База + "?", РежимДиалогаВопрос.ДаНет);	
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьКонфигураторБазы(РезультатВопроса, База) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Попытка
			ЗапуститьПриложение(РаботаСПользователем.ПолучитьСкриптЗапускаБазы(База));
		Исключение
			ЗапуститьПриложение(СтрЗаменить(РаботаСПользователем.ПолучитьСкриптЗапускаБазы(База),"Program Files (x86)", "Program Files"));
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
