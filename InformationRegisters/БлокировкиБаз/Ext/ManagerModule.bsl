&НаСервере
Процедура ЗаписатьДействие(База, Пользователь, Дата = Неопределено) Экспорт 
	Менеджер = РегистрыСведений.БлокировкиБаз.СоздатьМенеджерЗаписи();
	Менеджер.База = База;
	Менеджер.Пользователь = Пользователь;
	Если Дата = Неопределено Тогда
		Менеджер.Состояние = Перечисления.СостоянияБлокировокБаз.Захвачена;
		Менеджер.Период = ТекущаяДата();
		Менеджер.Записать();
	Иначе 
		Менеджер.Состояние = Перечисления.СостоянияБлокировокБаз.Свободна;
		Менеджер.ЗавершениеРаботы = ТекущаяДата();
		Менеджер.Период = Дата; 
		Менеджер.Записать();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция БазаЗахвачена(База, Инфо = "") Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БлокировкиБазСрезПоследних.Период,
	               |	БлокировкиБазСрезПоследних.Пользователь
	               |ИЗ
	               |	РегистрСведений.БлокировкиБаз.СрезПоследних КАК БлокировкиБазСрезПоследних
	               |ГДЕ
	               |	БлокировкиБазСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировокБаз.Захвачена)
	               |	И БлокировкиБазСрезПоследних.База = &База";
	Запрос.УстановитьПараметр("База", База);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Инфо = "Конфигуратор базы " + База +  " занят пользователем " + Строка(Выборка.Пользователь);
		Возврат Истина; 
	Иначе
		Инфо = "Конфигуратор базы " + База + " свободен!";
		Возврат Ложь; 	
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СнятьБлокировку(База) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БлокировкиБазСрезПоследних.Период,
	               |	БлокировкиБазСрезПоследних.Пользователь
	               |ИЗ
	               |	РегистрСведений.БлокировкиБаз.СрезПоследних КАК БлокировкиБазСрезПоследних
	               |ГДЕ
	               |	БлокировкиБазСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировокБаз.Захвачена)
	               |	И БлокировкиБазСрезПоследних.База = &База";
	Запрос.УстановитьПараметр("База", База);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ЗаписатьДействие(База, ПараметрыСеанса.ТекущийПользователь, Выборка.Период);
	КонецЦикла;
	
КонецПроцедуры
